From 112697a1b5fc1b0860bf4d96db8641f1b3d49a9d Mon Sep 17 00:00:00 2001
From: Your Name <1446775+jacaru@users.noreply.github.com>
Date: Sat, 25 Mar 2023 19:38:41 +0100
Subject: [PATCH 4/5] Support custom basePath at runtime.

next.js supports defining a custom base path at runtime. With some sed
trickery we can support it at runtime the first time a container
instance is created with new environment variable NEXT_PUBLIC_BASEPATH.
---
 Dockerfile           |  6 +++---
 docker-entrypoint.sh |  2 ++
 next.config.js       |  1 +
 set_basepath.sh      | 24 ++++++++++++++++++++++++
 4 files changed, 30 insertions(+), 3 deletions(-)
 create mode 100755 set_basepath.sh

diff --git a/Dockerfile b/Dockerfile
index 9fec35e7..6b941fb7 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -30,7 +30,7 @@ COPY . .
 SHELL ["/bin/ash", "-xeo", "pipefail", "-c"]
 RUN npm run telemetry \
  && mkdir config \
- && NEXT_PUBLIC_BUILDTIME=$BUILDTIME NEXT_PUBLIC_VERSION=$VERSION NEXT_PUBLIC_REVISION=$REVISION npm run build
+ && NEXT_PUBLIC_BASEPATH=/__BASEPATH__ NEXT_PUBLIC_BUILDTIME=$BUILDTIME NEXT_PUBLIC_VERSION=$VERSION NEXT_PUBLIC_REVISION=$REVISION npm run build
 
 # Production image, copy all the files and run next
 FROM docker.io/node:18-alpine AS runner
@@ -52,9 +52,9 @@ COPY --link --chown=1000:1000 /public ./public/
 # Copy files from builder
 COPY --link --from=builder --chown=1000:1000 /app/.next/standalone ./
 COPY --link --from=builder --chown=1000:1000 /app/.next/static/ ./.next/static/
-COPY --link --chmod=755 docker-entrypoint.sh /usr/local/bin/
+COPY --link --chmod=755 docker-entrypoint.sh set_basepath.sh /usr/local/bin/
 
-RUN apk add --no-cache su-exec
+RUN apk add --no-cache su-exec jq
 
 ENV PORT 3000
 EXPOSE $PORT
diff --git a/docker-entrypoint.sh b/docker-entrypoint.sh
index c2858808..c624c2f9 100755
--- a/docker-entrypoint.sh
+++ b/docker-entrypoint.sh
@@ -12,6 +12,8 @@ export PGID=${PGID:-0}
 
 export HOMEPAGE_BUILDTIME=$(date +%s)
 
+command -v "set_basepath.sh" > /dev/null && set_basepath.sh
+
 # Set privileges for /app but only if pid 1 user is root and we are dropping privileges.
 # If container is run as an unprivileged user, it means owner already handled ownership setup on their own.
 # Running chown in that case (as non-root) will cause error
diff --git a/next.config.js b/next.config.js
index e2efad75..79ceaa14 100644
--- a/next.config.js
+++ b/next.config.js
@@ -3,6 +3,7 @@ const { i18n } = require("./next-i18next.config");
 /** @type {import('next').NextConfig} */
 const nextConfig = {
   trailingSlash: true,
+  basePath: process.env.NEXT_PUBLIC_BASEPATH || undefined,
   reactStrictMode: true,
   output: "standalone",
   swcMinify: false,
diff --git a/set_basepath.sh b/set_basepath.sh
new file mode 100755
index 00000000..a81bd86d
--- /dev/null
+++ b/set_basepath.sh
@@ -0,0 +1,24 @@
+
+#!/bin/sh
+
+# replace /__BASEPATH__ with the runtime-configured entrypoint
+if [ "$NEXT_PUBLIC_BASEPATH" = "" ]; then
+  # root entrypoint is handled differently from non-root, in particular
+  #  - basePath="" rather than "/"
+  #  - an extra redirect is added /x/ => /x -- but with root that would be // => / which is invalid
+  cp .next/routes-manifest.json .next/routes-manifest.json.in
+  jq -rc '.basePath = ""
+    | .redirects = [
+        .redirects
+        | .[]
+        | select((.source == "/__BASEPATH__/" and .destination == "/__BASEPATH__") | not)
+      ]' .next/routes-manifest.json.in > .next/routes-manifest.json
+fi
+# first we look for /__BASEPATH__/ -- this should become / in the case of empty entrypoint
+#  then we look for /__BASEPATH__ -- this should become "" in the case of empty entrypoint
+find .next server.js \
+  -type f \
+  -exec sed -i \
+    -e "s#/__BASEPATH__/#${NEXT_PUBLIC_BASEPATH}/#g" \
+    -e "s#/__BASEPATH__#${NEXT_PUBLIC_BASEPATH}#g" \
+    {} +
-- 
2.30.2

